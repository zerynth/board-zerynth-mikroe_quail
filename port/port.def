/* Port definition */

////LAYOUT: particle
////PERIPHERALS: SERIAL0 SERIAL1 SERIAL2 SERIAL3 SERIAL4 ADC0 PWMD0 ICUD0 SPI0 SPI1 SPI2 I2C0 I2C1 I2C2 DAC0 DAC1
////CDEFINES: STM32F42x

const PinInfo const _vhalpinmap[] STORED = {
    /* D0   */ MAKE_PIN(PA, 15, HAS_EXT),
    /* D1   */ MAKE_PIN(PC, 13, HAS_EXT),
    /* D2   */ MAKE_PIN(PE, 6, HAS_EXT | HAS_SPI | HAS_ATM), //SPI4_MOSI, TIM9_CH2
    /* D3   */ MAKE_PIN(PE, 5, HAS_EXT | HAS_SPI | HAS_ATM), //SPI4_MISO, TIM9_CH1
    /* D4   */ MAKE_PIN(PD, 2, HAS_EXT),
    /* D5   */ MAKE_PIN(PD, 3, HAS_EXT),
    /* D6   */ MAKE_PIN(PD, 4, HAS_EXT),
    /* D7   */ MAKE_PIN(PD, 7, HAS_EXT),
    /* D8   */ MAKE_PIN(PE, 2, HAS_EXT | HAS_SPI), //SPI4_SCK
    /* D9   */ MAKE_PIN(PE, 3, HAS_EXT),
    /* D10  */ MAKE_PIN(PE, 4, HAS_EXT),
    /* D11  */ MAKE_PIN(PB, 13, HAS_EXT | HAS_CAN),
    /* D12  */ MAKE_PIN(PB, 12, HAS_EXT | HAS_CAN),
    /* D13  */ MAKE_PIN(PB, 11, HAS_EXT | HAS_I2C | HAS_SER | HAS_ATM), //TIM2_CH4, I2C2_SDA, USART3_RX
    /* D14  */ MAKE_PIN(PB, 10, HAS_EXT | HAS_I2C | HAS_SER | HAS_ATM), //TIM2_CH3, I2C2_SCL, USART3_TX
    /* D15  */ MAKE_PIN(PE, 14, HAS_EXT | HAS_ATM), //TIM1_CH4
    /* D16  */ MAKE_PIN(PE, 13, HAS_EXT | HAS_ATM), //TIM1_CH3
    /* D17  */ MAKE_PIN(PC,  4, HAS_EXT | HAS_ADC), //ADC14
    /* D18  */ MAKE_PIN(PE, 11, HAS_EXT),
    /* D19  */ MAKE_PIN(PE,  8, HAS_EXT | HAS_SER), //UART7T
    /* D20  */ MAKE_PIN(PE,  7, HAS_EXT | HAS_SER), //UART7R
    /* D21  */ MAKE_PIN(PB,  0, HAS_EXT | HAS_ADC | HAS_ATM), //ADC8, TIM3_CH3
    /* D22  */ MAKE_PIN(PC,  5, HAS_EXT | HAS_ADC), //ADC15

    //SOCKET 1
    /* D23  */ MAKE_PIN(PA,  6, HAS_EXT | HAS_ATM | HAS_ADC),  //ADC6, TIM3_CH1, TIM13_CH1
    /* D24  */ MAKE_PIN(PA,  2, HAS_EXT | HAS_ATM | HAS_ADC | HAS_SER), //ADC2, TIM2_CH3, TIM5_CH3, USART2TX
    /* D25  */ MAKE_PIN(PA,  3, HAS_EXT | HAS_ATM | HAS_ADC | HAS_SER), //ADC3, TIM2_CH4, TIM5_CH4, USART2RX
    /* D26  SCLK*/ MAKE_PIN(PB,  3, HAS_EXT | HAS_SPI | HAS_ATM), //SPI1_SCK, TIM2_CH2
    /* D27  MISO*/ MAKE_PIN(PB,  4, HAS_EXT | HAS_SPI | HAS_ATM), //SPI1_MISO, TIM3_CH1
    /* D28  MOSI*/ MAKE_PIN(PB,  5, HAS_EXT | HAS_SPI | HAS_ATM), //SPI1_MOSI, TIM3_CH2
    /* D29  */ MAKE_PIN(PE,  9, HAS_EXT | HAS_ATM), //TIM1_CH1
    /* D30  */ MAKE_PIN(PA,  1, HAS_EXT | HAS_ATM | HAS_ADC), //TIM2_CH2, TIM5_CH2, ADC1
    /* D31  R*/ MAKE_PIN(PD,  9, HAS_EXT | HAS_SER), //USART3_RX
    /* D32  T*/ MAKE_PIN(PD,  8, HAS_EXT | HAS_SER), //USART3_TX
    /* D33  SCL*/ MAKE_PIN(PB,  6, HAS_EXT | HAS_I2C | HAS_ATM | HAS_SER), //I2C1_SCL, USART1_TX, TIM4_CH1
    /* D34  SDA*/ MAKE_PIN(PB,  7, HAS_EXT | HAS_I2C | HAS_ATM | HAS_SER), //I2C1_SDA, USART1_RX, TIM4_CH2

    //SOCKET 2
    /* D35  */ MAKE_PIN(PA,  4, HAS_EXT | HAS_DAC | HAS_ADC), //ADC4, DAC1
    /* D36  */ MAKE_PIN(PE,  1, HAS_EXT | HAS_SER), //UART8_TX
    /* D37  */ MAKE_PIN(PE,  0, HAS_EXT | HAS_SER), //UART8_RX
    /* D38  */ MAKE_PIN(PD,  15, HAS_EXT | HAS_ATM), //TIM4_CH4
    /* D39  */ MAKE_PIN(PB,  9, HAS_EXT | HAS_ATM), //TIM11_CH1
    /* D40  R*/ MAKE_PIN(PD,  6, HAS_EXT | HAS_SER), //USART2_RX
    /* D41  T*/ MAKE_PIN(PD,  5, HAS_EXT | HAS_SER), //USART2_TX

    //SOCKET 3
    /* D42  */ MAKE_PIN(PA,  7, HAS_EXT | HAS_ADC | HAS_ATM), //ADC7, TIM3_CH2, TIM14_CH1
    /* D43  */ MAKE_PIN(PD,  12, HAS_EXT | HAS_ATM), //TIM4_CH1
    /* D44  */ MAKE_PIN(PD,  11, HAS_EXT),
    /* D45  SCLK*/ MAKE_PIN(PC,  10, HAS_EXT | HAS_SPI | HAS_SER), //UART4_T, SPI3_SCK
    /* D46  MISO*/ MAKE_PIN(PC,  11, HAS_EXT | HAS_SPI | HAS_SER), //UART4_R, SPI3_MISO
    /* D47  MOSI*/ MAKE_PIN(PC,  12, HAS_EXT | HAS_SPI), //SPI3_MOSI
    /* D48  */ MAKE_PIN(PD,  13, HAS_EXT | HAS_ATM), //TIM4_CH2
    /* D49  */ MAKE_PIN(PC,  8, HAS_EXT | HAS_ATM), //TIM8_CH3
    /* D50  R*/ MAKE_PIN(PC,  7, HAS_EXT | HAS_SER | HAS_ATM), //USART6_R, TIM8_CH2
    /* D51  T*/ MAKE_PIN(PC,  6, HAS_EXT | HAS_SER | HAS_ATM), //USART6_T, TIM8_CH1
    

    //SOCKET 4
    /* D52  */ MAKE_PIN(PA,  5, HAS_EXT | HAS_ATM | HAS_ADC | HAS_DAC), //TIM2_CH1,ADC5,DAC2
    /* D53  */ MAKE_PIN(PD,  0, HAS_EXT | HAS_CAN),
    /* D54  */ MAKE_PIN(PD,  1, HAS_EXT | HAS_CAN),
    /* D55  */ MAKE_PIN(PD,  14, HAS_EXT | HAS_ATM), //TIM4_CH3
    /* D56  */ MAKE_PIN(PA,  14, HAS_EXT),
    /* D57  R*/ MAKE_PIN(PA,  10, HAS_EXT | HAS_SER | HAS_ATM), //TIM1_CH3, USART1_RX, OTG_FS_ID
    /* D58  T*/ MAKE_PIN(PA,  9, HAS_EXT | HAS_SER | HAS_ATM), //TIM1_CH2, USART1_TX, OTG_FS_VBUS

    //LEDS
    /* D59 LR*/ MAKE_PIN(PC,  3, HAS_EXT),
    /* D60 LY*/ MAKE_PIN(PE,  10, HAS_EXT),
    /* D61 LG*/ MAKE_PIN(PE,  15, HAS_EXT | HAS_PWM), //TIM1_CH2

    //FLASH SPI & SPI
    /* D62 PD10*/ MAKE_PIN(PD,  10, HAS_EXT),
    /* D63 HOLD*/ MAKE_PIN(PA,  8, HAS_EXT),
    /* D64 WC-*/ MAKE_PIN(PA,  13, HAS_EXT),
    /* D65 WP-*/ MAKE_PIN(PC,  9, HAS_EXT),
    /* D66 PE12*/ MAKE_PIN(PE,  12, HAS_EXT),

    /* D67 */ MAKE_PIN(PA,  11, HAS_EXT), // OTG_FS_DM
    /* D68 */ MAKE_PIN(PA,  12, HAS_EXT), // OTG_FS_DP
};

const PinClass const _analogclass[] STORED = {
    /* D17 */ MAKE_PIN_CLASS(17, 14, 0, 0),
    /* D21 */ MAKE_PIN_CLASS(21, 8, 0, 0),
    /* D22 */ MAKE_PIN_CLASS(22, 15, 0, 0),
    /* D23 */ MAKE_PIN_CLASS(23, 6, 0, 0),
    /* D24 */ MAKE_PIN_CLASS(24, 2, 0, 0),
    /* D25 */ MAKE_PIN_CLASS(25, 3, 0, 0),
    /* D30 */ MAKE_PIN_CLASS(30, 1, 0, 0),
    /* D35 */ MAKE_PIN_CLASS(35, 4, 0, 0),
    /* D42 */ MAKE_PIN_CLASS(42, 7, 0, 0),
    /* D52 */ MAKE_PIN_CLASS(52, 5, 0, 0),
};

const PinClass const _spiclass[] STORED = {
    /* MOSI0 */ MAKE_PIN_CLASS(28, 1, 0, 5),
    /* MISO0 */ MAKE_PIN_CLASS(27, 1, 0, 5),
    /* SCLK0 */ MAKE_PIN_CLASS(26, 1, 0, 5),
    /* MOSI1 */ MAKE_PIN_CLASS(47, 3, 0, 6),
    /* MISO1 */ MAKE_PIN_CLASS(46, 3, 0, 6),
    /* SCLK1 */ MAKE_PIN_CLASS(45, 3, 0, 6),
    /* MOSI2 */ MAKE_PIN_CLASS(2, 4, 0, 5),
    /* MISO2 */ MAKE_PIN_CLASS(3, 4, 0, 5),
    /* SCLK2 */ MAKE_PIN_CLASS(8, 4, 0, 5),

};

const PinClass const _i2cclass[] STORED = {
    /* SDA0 */ MAKE_PIN_CLASS(34, 1, 0, 4),
    /* SCL0 */ MAKE_PIN_CLASS(33, 1, 0, 4),
    /* SDA1 */ MAKE_PIN_CLASS(13, 2, 0, 4),
    /* SCL1 */ MAKE_PIN_CLASS(14, 2, 0, 4),
};


//phys, timer, channel, afio
const PinClass const _pwmclass[] STORED = {
    /* PWM0 */ MAKE_PIN_CLASS(0, 4, 2, 2),
    /* PWM1 */ MAKE_PIN_CLASS(1, 4, 1, 2),
    /* PWM2 */ MAKE_PIN_CLASS(2, 3, 2, 2),
    /* PWM3 */ MAKE_PIN_CLASS(3, 3, 1, 2),
    /* PWM4 */ MAKE_PIN_CLASS(4, 2, 2, 1),
    /* PWM5 */ MAKE_PIN_CLASS(9, 5, 1, 2),
    /* PWM6 */ MAKE_PIN_CLASS(10, 1, 3, 1),
    /* PWM7 */ MAKE_PIN_CLASS(11, 1, 2, 1),
    /* PWM8 */ MAKE_PIN_CLASS(12, 2, 2, 1),
    /* PWM9 */ MAKE_PIN_CLASS(13, 2, 3, 1),
    /* PWM10 */ MAKE_PIN_CLASS(14, 2, 4, 1),
    /* PWM11 */ MAKE_PIN_CLASS(31, 3, 1, 2),
    /* PWM12 */ MAKE_PIN_CLASS(32, 3, 2, 2),
};


const PinClass const _icuclass[] STORED = {
    /* PWM0 */ MAKE_PIN_CLASS(0, 4, 2, 2),
    /* PWM1 */ MAKE_PIN_CLASS(1, 4, 1, 2),
    /* PWM2 */ MAKE_PIN_CLASS(2, 3, 2, 2),
    /* PWM3 */ MAKE_PIN_CLASS(3, 3, 1, 2),
    /* PWM4 */ MAKE_PIN_CLASS(4, 2, 2, 1),
    /* PWM5 */ MAKE_PIN_CLASS(9, 5, 1, 2),
    /* PWM6 */ MAKE_PIN_CLASS(10, 1, 3, 1),
    /* PWM7 */ MAKE_PIN_CLASS(11, 1, 2, 1),
    /* PWM11 */ MAKE_PIN_CLASS(31, 3, 1, 2),
    /* PWM12 */ MAKE_PIN_CLASS(32, 3, 2, 2),
};

const PinClass const _canclass[] STORED = {
};

const PinClass const _serclass[] STORED = {
    /* RX0 */ MAKE_PIN_CLASS(67, 57, 0, 10),
    /* TX0 */ MAKE_PIN_CLASS(68, 58, 0, 10),
    /* RX1 */ MAKE_PIN_CLASS(31, 3, 0, 7),
    /* TX1 */ MAKE_PIN_CLASS(32, 3, 0, 7),
    /* RX2 */ MAKE_PIN_CLASS(40, 2, 0, 7),
    /* TX2 */ MAKE_PIN_CLASS(41, 2, 0, 7),
    /* RX3 */ MAKE_PIN_CLASS(50, 6, 0, 8),
    /* TX3 */ MAKE_PIN_CLASS(51, 6, 0, 8),
    /* RX4 */ MAKE_PIN_CLASS(57, 1, 0, 7),
    /* TX4 */ MAKE_PIN_CLASS(58, 1, 0, 7),
};

const PinClass const _dacclass[] STORED = {
};

const PinClass const _ledclass[] STORED = {
    /* LED0 */ MAKE_PIN_CLASS(59, 0, 0, 0),
    /* LED1 */ MAKE_PIN_CLASS(60, 0, 0, 0),
    /* LED2 */ MAKE_PIN_CLASS(61, 0, 0, 0),
};

const PinClass const _btnclass[] STORED = {
};


